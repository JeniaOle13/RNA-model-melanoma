---
title: "Bulk RNA-seq analysis of mice model melanoma"
format: html
editor: visual
---
# Material and methods
<p style="text-align: justify;">
Quality control of experimental mice transcriptomics data was performed using [FastQC](https://github.com/s-andrews/FastQC) (v0.12.1). [MultiQC](https://github.com/MultiQC/MultiQC) tool was used for aggregation of `FastQC` reports [Ewels et al., 2016]. The [fastp](https://github.com/OpenGene/fastp) (v0.23.4) was used to filter out low-quality reads [Chen et al., 2018]. Read alignment was performed by [STAR](https://github.com/alexdobin/STAR) (v2.7.11) [Dobin et al., 2013] using the *Mus musculus* reference genome downloaded from [GENCODE](https://www.gencodegenes.org/mouse/) `GRCm39.vM36` and the `gtf` file `gencode.vM36.chr_patch_hapl_scaff.annotation.gtf`. Count of gene expression profiles was performed using [HTSeq count](https://github.com/simon-anders/htseq) (v2.0.5) [Anders et al., 2015]. Differential expression analysis between experimental groups was performed using [DESeq2](https://github.com/thelovelab/DESeq2) (v1.44.0) [Love et al., 2014]. Gene-set enrichment analysis (`GSEA`) was performed using [fgsea](https://github.com/alserglab/fgsea) (v1.31.6) [Korotkevich et al., 2016] and [clusterProfiler](https://guangchuangyu.github.io/software/clusterProfiler/) (v4.12.6) [Wu et al., 2021] approaches using the following databases: [MSigDB](https://www.gsea-msigdb.org/gsea/msigdb) [Castanza et al., 2023]. Mapping gene identifiers between different coding systems was performed by [biomaRt](https://github.com/grimbough/biomaRt) package. To perform the `GSEA` analysis using immune cells markers, a [CellMarker 2.0](http://www.bio-bigdata.center/) database were used [Hu et al., 2023]. Gene set variation analysis [GSVA](https://github.com/rcastelo/GSVA) was used for estimating immune cell type enrichment within samples [Hänzelmann et al., 2013]. Co-expression analysis was performed using [BioNERO](https://github.com/almeidasilvaf/BioNERO) (v1.12.0) [Almeida-Silva et al., 2022] with signed hybrid network type and Pearson correlation. Correction of expression data by differentiation method batch was performed using `removeBatchEffect` function from [limma](https://kasperdanielhansen.github.io/genbioconductor/html/limma.html) package [Ritchie et al., 2015]. Over-representation analysis for functional analysis of co-expressed gene modules linked to experimental groups using `clusterProfiler` package with `MSigDB`, [KEGG](https://www.genome.jp/kegg/) [Kanehisa et al., 2025], [Reactome](https://reactome.org/) [Milacic et al., 2024] and [WikiPathways](https://www.wikipathways.org/) [Agrawal et al., 2024]. [STRING](https://string-db.org/) database and [STRINGdb](https://www.bioconductor.org/packages/release/bioc/html/STRINGdb.html) Bioconductor package were used for construction of interaction networks linked to genes included to co-expressed gene modules [Szklarczyk et al., 2023]. For visualization of obtained results [pheatmap](https://github.com/raivokolde/pheatmap) (v1.0.12), [ggplot2](https://ggplot2.tidyverse.org/]) (v3.5.1) and [EnhancedVolcano](https://github.com/kevinblighe/EnhancedVolcano) packages were used. Data analysis were implemented in [R](https://www.r-project.org/) (v4.4.2).
</p>

```{mermaid}
flowchart LR
    A[("Raw reads")] --> B{"fastp"}
    B --> C{"FastQC"} & E{"STAR"}
    C --> D{"MultiQC"}
    E --> F{"HTSeq"}
    F --> G[("Count table")]
    G --> I{"DESeq2"} & Z{"limma"} & W{"PCA"}
    Z --> H{"PCA"} & J{"BioNERO"}
    I --> K{"GSEA"}
    J --> L{"ORA"} & N{"STRING"}
    G --> V{"GSVA"}

     A:::Aqua
     B:::Aqua
     B:::Pine
     C:::Pine
     E:::Pine
     D:::Pine
     F:::Pine
     G:::Aqua
     I:::Pine
     Z:::Pine
     W:::Pine
     H:::Pine
     J:::Pine
     K:::Pine
     L:::Pine
     N:::Pine
     V:::Pine
    classDef Aqua stroke-width:1px, stroke-dasharray:none, stroke:#46EDC8, fill:#DEFFF8, color:#378E7A
    classDef Pine stroke-width:1px, stroke-dasharray:none, stroke:#254336, fill:#27654A, color:#FFFFFF
```

## References
1) [Ewels, Philip, et al. "MultiQC: summarize analysis results for multiple tools and samples in a single report." Bioinformatics 32.19 (2016): 3047-3048.](https://academic.oup.com/bioinformatics/article/32/19/3047/2196507)

2) [Chen, Shifu, et al. "fastp: an ultra-fast all-in-one FASTQ preprocessor." Bioinformatics 34.17 (2018): i884-i890.](https://academic.oup.com/bioinformatics/article/34/17/i884/5093234)

3) [Dobin, Alexander, et al. "STAR: ultrafast universal RNA-seq aligner." Bioinformatics 29.1 (2013): 15-21.](https://academic.oup.com/bioinformatics/article/29/1/15/272537)

4) [Anders, Simon, Paul Theodor Pyl, and Wolfgang Huber. "HTSeq—a Python framework to work with high-throughput sequencing data." Bioinformatics 31.2 (2015): 166-169](https://academic.oup.com/bioinformatics/article/31/2/166/2366196)

5) [Love, Michael I., Wolfgang Huber, and Simon Anders. "Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2." Genome biology 15 (2014): 1-21.](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-014-0550-8)

6) [Hu, Congxue, et al. "CellMarker 2.0: an updated database of manually curated cell markers in human/mouse and web tools based on scRNA-seq data." Nucleic acids research 51.D1 (2023): D870-D876.](https://academic.oup.com/nar/article/51/D1/D870/6775381)

7) [Hänzelmann, Sonja, Robert Castelo, and Justin Guinney. "GSVA: gene set variation analysis for microarray and RNA-seq data." BMC bioinformatics 14 (2013): 1-15.](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-14-7)

8) [Almeida-Silva, Fabricio, and Thiago M. Venancio. "BioNERO: an all-in-one R/Bioconductor package for comprehensive and easy biological network reconstruction." Functional & Integrative Genomics 22.1 (2022): 131-136.](https://link.springer.com/article/10.1007/s10142-021-00821-9)

9) [Ritchie, Matthew E., et al. "limma powers differential expression analyses for RNA-sequencing and microarray studies." Nucleic acids research 43.7 (2015): e47-e47.](https://academic.oup.com/nar/article/43/7/e47/2414268)

11) [Kanehisa, Minoru, et al. "KEGG: biological systems database as a model of the real world." Nucleic Acids Research 53.D1 (2025): D672-D677.](https://academic.oup.com/nar/article/53/D1/D672/7824602)

12) [Milacic, Marija, et al. "The reactome pathway knowledgebase 2024." Nucleic acids research 52.D1 (2024): D672-D678.](https://academic.oup.com/nar/article/52/D1/D672/7369850)

13) [Agrawal, Ayushi, et al. "WikiPathways 2024: next generation pathway database." Nucleic acids research 52.D1 (2024): D679-D689.](https://academic.oup.com/nar/article/52/D1/D679/7369835)

14) [Szklarczyk, Damian, et al. "The STRING database in 2023: protein–protein association networks and functional enrichment analyses for any sequenced genome of interest." Nucleic acids research 51.D1 (2023): D638-D646.](https://academic.oup.com/nar/article/51/D1/D638/6825349)

## Database links
GENCODE: <https://www.gencodegenes.org/mouse/>

MSigDB: <https://www.gsea-msigdb.org/gsea/msigdb>

KEGG: <https://www.genome.jp/kegg/>

Reactome: <https://reactome.org/>

Wiki pathways: <https://www.wikipathways.org/>

CellMarker: <http://www.bio-bigdata.center/>

STRING: <https://string-db.org/>

## Tool links
FastQC: <https://github.com/s-andrews/FastQC>

MultiQC: <https://github.com/MultiQC/MultiQC>

fastp: <https://github.com/OpenGene/fastp>

STAR: <https://github.com/alexdobin/STAR>

HTSeq: <https://github.com/simon-anders/htseq>

DESeq2: <https://github.com/thelovelab/DESeq2>

fgsea: <https://github.com/alserglab/fgsea>

clusterProfiler: <https://guangchuangyu.github.io/software/clusterProfiler/>

GSVA: <https://bioconductor.org/packages/release/bioc/html/GSVA.html>

biomaRt: <https://github.com/grimbough/biomaRt>

BioNERO: <https://github.com/almeidasilvaf/BioNERO>

limma: <https://bioconductor.org/packages/release/bioc/html/limma.html>

STRINGdb: <https://www.bioconductor.org/packages/release/bioc/html/STRINGdb.html>

pheatmap: <https://github.com/raivokolde/pheatmap>

ggplot2: <https://github.com/tidyverse/ggplot2>

EnhancedVolcano: <https://github.com/kevinblighe/EnhancedVolcano>

R: <https://www.r-project.org/>

# Results

```{r}
#| label: Import libraries
#| message: false
#| warning: false
#| include: false

library(vegan)
library(fgsea)
library(limma)
library(stringr)
library(BioNERO)
library(DESeq2)
library(tidyverse)
library(factoextra)
library(clusterProfiler)

library(ggpubr)
library(ggplot2)
library(pheatmap)
library(RColorBrewer)
library(ComplexHeatmap)
library(EnhancedVolcano)

library(DOSE)
library(msigdbr)
library(msigdbdf)
library(biomaRt)
library(ReactomePA)
library(org.Mm.eg.db)
library(AnnotationDbi)
library(AnnotationHub)
library(GSVA)
library(STRINGdb)
library(immunedeconv)

library(DT)
library(downloadthis)

mypal <- brewer.pal(8, "Set1")

set.seed(10)
```

```{r}
#| label: Import data
#| message: false
#| warning: false
#| include: false

meta_data <- read.csv("data/metadata.tsv", sep = "\t")
meta_data$group <- as.factor(meta_data$group)
meta_data$batch <- as.factor(meta_data$batch)
meta_data$File <- meta_data$sampleid
meta_data <- meta_data[c(1,4,2,3)]
meta_data$File <- paste0(meta_data$File, ".counts")

reads.counts <- read.csv("data/counts.tsv", sep = "\t")
colnames(reads.counts)[3] <- "filtered"
colnames(reads.counts)[4] <- "%_filtered"
reads.counts <- merge(meta_data[c(1,3)], reads.counts, by = 1)

ddsHTSeq <- DESeqDataSetFromHTSeqCount(sampleTable = meta_data,
                                       directory = "data/htseq/",
                                       design= ~ 0 + group + batch)
rownames(ddsHTSeq) <- sapply(str_split(rownames(ddsHTSeq), "\\."), function(x) x[1])

ENTREZID <- mapIds(org.Mm.eg.db, keys = rownames(ddsHTSeq), keytype="ENSEMBL", column = "ENTREZID")
ENTREZID <- as.data.frame(ENTREZID)
ENTREZID <- cbind(rownames(ENTREZID), ENTREZID)
colnames(ENTREZID)[1] <- "ENSEMBL"

SYMBOL <- mapIds(org.Mm.eg.db, keys = rownames(ddsHTSeq), keytype="ENSEMBL", column = "SYMBOL")
SYMBOL <- as.data.frame(SYMBOL)
SYMBOL <- cbind(rownames(SYMBOL), SYMBOL)
colnames(SYMBOL)[1] <- "ENSEMBL"

convertID <- merge(SYMBOL, ENTREZID)
```

## Samples and experimental groups
<p style="text-align: justify;">
A total of 14 transcriptomic samples corresponding to the following three experimental groups: melanoma (n=6) and melanoma with *Bifidobacterium adolescentis* 150 supplement (n=6) and melanoma with *Lacticaseibacillus rhamnosus* K32 supplement (n=2) were added to the analysis (see Table 1). The experiment was performed in two replicates: first included only melanoma and melanoma with *B. adolescentis* supplement groups; second included all three experimental groups. To simplify the description of the results, we adopted the following codings:
<p>

Experimental groups: 

1) Melanoma --> `M`

2) Melanoma with *B. adolescentis* supplement --> `M_BIF`

3) Melanoma with *L. rhamnosus* supplement --> `M_BIF`

Experimental batch:

1) First experiment --> `batch_1`

2) Second experiment --> `batch_2`

```{r}
#| label: Metadata table
#| echo: false
meta_data_d <- meta_data[order(meta_data$group),]
meta_data_d$batch <- paste0("batch_", meta_data_d$batch)

datatable(meta_data[-2], 
          caption = "Table 1. Samples metadata.",
          style = "bootstrap5", 
          extensions = 'Buttons', 
          options = list(dom = 'lBfrtip',
                         buttons = c('csv', 'excel')))
```

## Quality control



#### MiltiQC report
[MultiQC full report](multiqc_report.html)

![Figure 1. Summary MultiQC report.](fastqc-status-check-heatmap.svg)

#### Reads filtering by quality statistic
```{r}
#| label: fastp filtered table
#| echo: false
datatable(reads.counts, 
          caption = "Table 2. Reads filtering statistic.",
          style = "bootstrap5", 
          extensions = 'Buttons', 
          options = list(dom = 'lBfrtip',
                         buttons = c('csv', 'excel')))
```

#### Mapping reads to reference counts
```{r}
#| label: HTSeq count plot
#| echo: false

counts.df <- as.data.frame(round(colSums(counts(ddsHTSeq))/1000000, 2))
counts.df <- cbind(sampleid = rownames(counts.df), counts.df)
colnames(counts.df)[2] <- "counts"

counts.df <- merge(meta_data[-2], counts.df, by = 1)

counts_plot <- ggplot(counts.df, aes(counts, reorder(sampleid, counts), fill = group))+
    geom_bar(stat = "identity")+
    theme_bw()+
    scale_fill_brewer(palette = "Set1")+
    xlab("Reads counts, mln")+
    ylab("Sample ID")+
    theme(legend.position = "bottom")
```

```{r fig.height=7, fig.width=5}
#| label: HTSeq count plot download
#| echo: false
download_this(
  counts_plot,
  output_name = "counts_plot",
  output_extension = ".pdf",
  button_label = "PDF",
  button_type = "primary"
)
```

```{r fig.height=7, fig.width=5}
#| label: HTSeq count plot draw
#| echo: false
#| fig-cap: Figure 3. Barplot denoted HTSeq counts per experimantal sample.
counts_plot
```

#### ANOVA
```{r}
#| label: HTSeq ANOVA
#| echo: false
#| message: false
#| warning: false

counts.aov <- aov(rank(counts) ~ batch + group, counts.df)
summary(counts.aov)
```

## Principal component analysis